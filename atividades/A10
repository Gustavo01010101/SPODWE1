<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Formulário de Cadastro</title>
    <style>
        .invalid {
            border: 2px solid red;
        }
        .error-message {
            color: red;
            display: none;
        }
    </style>
</head>
<body>
    <h1>Cadastro</h1>
    <form id="cadastroForm">
        <label for="nome">Nome Completo:</label>
        <input type="text" id="nome" name="nome" required>
        <span class="error-message"></span><br><br>

        <label for="dataNascimento">Data de Nascimento:</label>
        <input type="text" id="dataNascimento" name="dataNascimento" placeholder="dd/mm/aaaa" required>
        <span class="error-message"></span><br><br>

        <label for="cpf">CPF:</label>
        <input type="text" id="cpf" name="cpf" placeholder="000.000.000-00" required>
        <span class="error-message"></span><br><br>

        <label for="telefone">Telefone:</label>
        <input type="text" id="telefone" name="telefone" placeholder="(00) 00000-0000" required>
        <span class="error-message"></span><br><br>

        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
        <span class="error-message"></span><br><br>

        <button type="submit">Enviar</button>
    </form>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('cadastroForm');
            const inputs = form.querySelectorAll('input');

            inputs.forEach(input => {
                input.addEventListener('input', function() {
                    validateField(input);
                });
            });

            form.addEventListener('submit', function(event) {
                event.preventDefault();
                let formValid = true;

                inputs.forEach(input => {
                    if (!validateField(input)) {
                        formValid = false;
                    }
                });

                if (formValid) {
                    alert('Formulário enviado com sucesso!');
                    form.reset();
                } else {
                    alert('Por favor, corrija os campos destacados.');
                }
            });

            function validateField(input) {
                const value = input.value.trim();
                const errorMessage = input.nextElementSibling;

                if (input.id === 'nome') {
                    if (value === '') {
                        setInvalid(input, errorMessage, 'Por favor, insira seu nome completo.');
                        return false;
                    } else {
                        setValid(input, errorMessage);
                        return true;
                    }
                }

                if (input.id === 'dataNascimento') {
                    if (!/^\d{2}\/\d{2}\/\d{4}$/.test(value)) {
                        setInvalid(input, errorMessage, 'Por favor, insira uma data de nascimento válida.');
                        return false;
                    } else {
                        setValid(input, errorMessage);
                        return true;
                    }
                }

                if (input.id === 'cpf') {
                    if (!isValidCPF(value)) {
                        setInvalid(input, errorMessage, 'Por favor, insira um CPF válido.');
                        return false;
                    } else {
                        setValid(input, errorMessage);
                        return true;
                    }
                }

                if (input.id === 'telefone') {
                    if (!/^\(\d{2}\) \d{5}-\d{4}$/.test(value)) {
                        setInvalid(input, errorMessage, 'Por favor, insira um telefone válido.');
                        return false;
                    } else {
                        setValid(input, errorMessage);
                        return true;
                    }
                }

                if (input.id === 'email') {
                    if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(value)) {
                        setInvalid(input, errorMessage, 'Por favor, insira um e-mail válido.');
                        return false;
                    } else {
                        setValid(input, errorMessage);
                        return true;
                    }
                }
            }

            function setInvalid(input, errorMessage, message) {
                input.classList.add('invalid');
                errorMessage.textContent = message;
                errorMessage.style.display = 'block';
            }

            function setValid(input, errorMessage) {
                input.classList.remove('invalid');
                errorMessage.textContent = '';
                errorMessage.style.display = 'none';
            }

            function isValidCPF(cpf) {
                cpf = cpf.replace(/[^\d]/g, ''); 
                if (cpf.length !== 11 || /^(\d)\1{10}$/.test(cpf)) {
                    return false;
                }

                let soma = 0, resto;
                for (let i = 1; i <= 9; i++) {
                    soma += parseInt(cpf.charAt(i - 1)) * (11 - i);
                }
                resto = (soma * 10) % 11;
                if (resto === 10 || resto === 11) resto = 0;
                if (resto !== parseInt(cpf.charAt(9))) return false;

                soma = 0;
                for (let i = 1; i <= 10; i++) {
                    soma += parseInt(cpf.charAt(i - 1)) * (12 - i);
                }
                resto = (soma * 10) % 11;
                if (resto === 10 || resto === 11) resto = 0;
                if (resto !== parseInt(cpf.charAt(10))) return false;

                return true;
            }
        });
    </script>
</body>
</html>
